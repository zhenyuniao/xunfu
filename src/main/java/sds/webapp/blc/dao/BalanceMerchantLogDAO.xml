<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sds.webapp.blc.dao.BalanceMerchantLogDAO">
	<select id="findByKey" parameterType="BalanceMerchantLogDomain"
		resultType="BalanceMerchantLogDomain" useCache="true">
		select
		ID,TARGET_ID,ACCOUNT,BALANCE,CREATE_DATE,UPDATE_DATE,REMARK,STATUS,OPERATION
		from fm_balance_merchant_log
		<where>
			and ID = #{id}
		</where>
	</select>
	<select id="findByWhere" parameterType="BalanceMerchantLogDomain"
		resultType="BalanceMerchantLogDomain" useCache="true">
		select
		ID,TARGET_ID,ACCOUNT,BALANCE,CREATE_DATE,UPDATE_DATE,REMARK,STATUS,OPERATION
		from fm_balance_merchant_log
		<where>
			<if test="id !=null">
				and ID = #{id}
			</if>
			<if test="targetId !=null">
				and TARGET_ID = #{targetId}
			</if>
			<if test="account !=null">
				and ACCOUNT = #{account}
			</if>
			<if test="balance !=null">
				and BALANCE = #{balance}
			</if>
			<if test="createDate !=null">
				and CREATE_DATE = #{createDate}
			</if>
			<if test="updateDate !=null">
				and UPDATE_DATE = #{updateDate}
			</if>
			<if test="remark !=null">
				and REMARK = #{remark}
			</if>
			<if test="status !=null">
				and STATUS = #{status}
			</if>
			<if test="operation !=null">
				and OPERATION = #{operation}
			</if>
		</where>
	</select>
	<insert id="insert" parameterType="BalanceMerchantLogDomain"
		flushCache="true">
		insert into
		fm_balance_merchant_log(ID,TARGET_ID,ACCOUNT,ORDER_ID,ORDER_DATE,BALANCE,CREATE_DATE,UPDATE_DATE,REMARK,STATUS,OPERATION)
		values
		(#{id},#{targetId},#{account},#{orderId},#{orderDate},#{balance},#{createDate},#{updateDate},#{remark},#{status},#{operation})
	</insert>
	<update id="update" parameterType="BalanceMerchantLogDomain"
		flushCache="true">
		update fm_balance_merchant_log
		<set>
			<if test="targetId !=null">
				TARGET_ID = #{targetId},
			</if>
			<if test="account !=null">
				ACCOUNT = #{account},
			</if>
			<if test="balance !=null">
				BALANCE = #{balance},
			</if>
			<if test="createDate !=null">
				CREATE_DATE = #{createDate},
			</if>
			<if test="updateDate !=null">
				UPDATE_DATE = #{updateDate},
			</if>
			<if test="remark !=null">
				REMARK = #{remark},
			</if>
			<if test="status !=null">
				STATUS = #{status},
			</if>
			<if test="operation !=null">
				OPERATION = #{operation},
			</if>
		</set>
		<where>
			and ID = #{id}

		</where>
	</update>
	<delete id="delete" parameterType="BalanceMerchantLogDomain"
		flushCache="true">
		delete from fm_balance_merchant_log
		<where>
			and ID = #{id}
		</where>
	</delete>


	<update id="invalidBalanceLog" parameterType="BalanceMerchantLogDomain"
		flushCache="true">
		update fm_balance_merchant_log
		<set>
			STATUS = 0
		</set>
		<where>
			and TARGET_ID = #{targetId}
			and ORDER_ID = #{orderId}
		</where>
	</update>


	<update id="computeByLog" parameterType="BalanceMerchantLogDomain"
		flushCache="true">
		update fm_balance_merchant SET balance = (
		SELECT
		SUM(a.balance) FROM fm_balance_merchant_log a WHERE a.TARGET_ID =
		#{targetId} AND a.status !=0
		),count_in = (
		SELECT SUM(a.balance) FROM
		fm_balance_merchant_log a WHERE a.TARGET_ID =
		#{targetId} AND a.status
		=1
		),count_out=(
		SELECT SUM(a.balance) FROM fm_balance_merchant_log a
		WHERE
		a.TARGET_ID =
		#{targetId} AND a.status =2
		) WHERE
		TARGET_ID=#{targetId}
	</update>



	<select id="getBalanceLogByUser" resultType="BalanceMerchantLogDomain"
		useCache="true">
		SELECT
		a.id,
		a.target_id,
		b.account,
		a.order_id,
		a.balance,
		a.create_date,
		b.real_name as realName,
		(SELECT
		b.real_name FROM fm_merchant b WHERE b.id = d.TJ_ID) as tjName,
		(SELECT
		b.account FROM fm_merchant b WHERE b.id = d.TJ_ID) as tjAccount,
		d.amount
		FROM
		fm_profit d,
		fm_balance_merchant_log a
		LEFT JOIN fm_merchant b ON a.target_id =
		b.id
		LEFT JOIN (
		SELECT
		id,
		parent_id,
		@pathnodes :=
		IF (
		parent_id =- 1,
		',0',
		CONCAT(
		CONCAT_WS(
		',',
		IF (
		LOCATE(
		CONCAT('|', parent_id, ':')
		,@pathall
		) > 0,
		SUBSTRING_INDEX(
		SUBSTRING_INDEX(
		@pathall,
		CONCAT('|',
		parent_id, ':') ,- 1
		),
		'|',
		1
		) ,@pathnodes
		),
		parent_id
		),
		',',
		id
		)
		) paths
		FROM
		fm_user
		) c ON b.agent_id = c.id
		<where>
			c.paths LIKE '%,${id}%'
			and a.status = 1
		</where>
	</select>
</mapper>